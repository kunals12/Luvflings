name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: metadogeunity/luvflings:latest  # Replace with your Docker Hub username and repository

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Install Docker Compose
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

            # Create the docker-compose.yml file
            cat > ~/docker-compose.yml << 'EOF'
            version: '3.8'

            services:
              luvflings:
                image: metadogeunity/luvflings:latest
                ports:
                  - "3000:3000"
                depends_on:
                  - redis
                environment:
                  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
                  DATABASE_URL: ${{ secrets.DATABASE_URL }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: ${{ secrets.AWS_REGION }}
                  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
                  WALLETS_LIST_CACHE_TTL_MS: ${{ secrets.WALLETS_LIST_CACHE_TTL_MS }}
                  MANIFEST_URL: ${{ secrets.MANIFEST_URL }}
                  DELETE_SEND_TX_MESSAGE_TIMEOUT_MS: ${{ secrets.DELETE_SEND_TX_MESSAGE_TIMEOUT_MS }}
                  CONNECTOR_TTL_MS: ${{ secrets.CONNECTOR_TTL_MS }}
                  REDIS_HOST: ${{ secrets.REDIS_HOST }}
                  REDIS_PORT: ${{ secrets.REDIS_PORT }}
                  TMA_URL: ${{ secrets.TMA_URL }}
              redis:
                image: "redis"
                ports:
                  - "6379:6379"
            EOF

            # Log in to Docker
            sudo echo ${{ secrets.DOCKER_PASSWORD }} | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            # Stop and remove the existing containers
            sudo docker-compose -f ~/docker-compose.yml down

            # Use Docker Compose to pull and deploy the latest image
            sudo docker-compose -f ~/docker-compose.yml pull
            sudo docker-compose -f ~/docker-compose.yml up -d

      - name: Verify Deployment
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.SSH_USERNAME }}
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker-compose -f ~/docker-compose.yml ps
            sudo docker-compose -f ~/docker-compose.yml logs
